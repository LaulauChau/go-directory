package templates

import (
	"fmt"
	"github.com/LaulauChau/go-directory/internal/domain"
)

templ Index(contacts []domain.Contact) {
	@Layout("Phone Directory") {
		<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
			<!-- Add Contact Form -->
			<div class="bg-white rounded-lg shadow-md p-6">
				<h2 class="text-xl font-semibold mb-4 text-gray-800">Add Contact</h2>
				<form hx-post="/contacts" hx-target="#contact-list" hx-swap="innerHTML">
					<div class="mb-4">
						<label for="name" class="block text-sm font-medium text-gray-700 mb-2">Name</label>
						<input
							type="text"
							id="name"
							name="name"
							required
							class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
							placeholder="John Doe"
						/>
					</div>
					<div class="mb-4">
						<label for="phone" class="block text-sm font-medium text-gray-700 mb-2">Phone</label>
						<input
							type="tel"
							id="phone"
							name="phone"
							required
							class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
							placeholder="1234567890"
						/>
					</div>
					<button
						type="submit"
						class="w-full bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500"
					>
						Add Contact
					</button>
				</form>
			</div>
			<!-- Search Form -->
			<div class="bg-white rounded-lg shadow-md p-6">
				<h2 class="text-xl font-semibold mb-4 text-gray-800">Search Contact</h2>
				<form>
					<div class="mb-4">
						<label for="search" class="block text-sm font-medium text-gray-700 mb-2">Search by Name</label>
						<input
							type="text"
							id="search"
							name="q"
							hx-get="/search"
							hx-target="#search-result"
							hx-trigger="input changed delay:300ms, keyup changed delay:300ms"
							class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
							placeholder="Search contacts..."
						/>
					</div>
				</form>
				<div id="search-result" class="mt-4"></div>
			</div>
		</div>
		<!-- Contact List -->
		<div class="mt-8 bg-white rounded-lg shadow-md p-6">
			<h2 class="text-xl font-semibold mb-4 text-gray-800">Contacts</h2>
			<div id="contact-list">
				@ContactList(contacts)
			</div>
		</div>
	}
}

templ ContactList(contacts []domain.Contact) {
	if len(contacts) == 0 {
		<p class="text-gray-500 text-center py-4">No contacts found</p>
	} else {
		<div class="space-y-3">
			for _, contact := range contacts {
				@ContactItem(contact)
			}
		</div>
	}
}

templ ContactItem(contact domain.Contact) {
	<div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
		<div>
			<h3 class="font-medium text-gray-800">{ contact.Name }</h3>
			<p class="text-gray-600">{ contact.Phone }</p>
		</div>
		<div class="flex space-x-2">
			<button
				onclick={ editContact(contact.Name, contact.Phone) }
				class="px-3 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600 focus:outline-none"
			>
				Edit
			</button>
			<button
				hx-delete={ "/contacts/" + contact.Name }
				hx-target="#contact-list"
				hx-swap="innerHTML"
				hx-confirm="Are you sure you want to delete this contact?"
				class="px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600 focus:outline-none"
			>
				Delete
			</button>
		</div>
	</div>
}

templ SearchResult(contact *domain.Contact, err error) {
	if err != nil {
		<div class="p-3 bg-red-100 border border-red-300 rounded-md">
			<p class="text-red-700">{ err.Error() }</p>
		</div>
	} else if contact != nil {
		<div class="p-3 bg-green-100 border border-green-300 rounded-md">
			<h4 class="font-medium text-green-800">{ contact.Name }</h4>
			<p class="text-green-700">{ contact.Phone }</p>
		</div>
	}
}

templ SearchResults(matches []domain.Contact, query string) {
	if len(matches) == 0 {
		<div class="p-3 bg-red-100 border border-red-300 rounded-md">
			<p class="text-red-700">No contacts found matching "{ query }"</p>
		</div>
	} else {
		<div class="p-3 bg-green-100 border border-green-300 rounded-md">
			<h4 class="font-medium text-green-800 mb-2">Found { fmt.Sprintf("%d", len(matches)) } contact(s) matching "{ query }":</h4>
			<div class="space-y-2">
				for _, contact := range matches {
					<div class="bg-white p-2 rounded border">
						<p class="font-medium text-gray-800">{ contact.Name }</p>
						<p class="text-gray-600">{ contact.Phone }</p>
					</div>
				}
			</div>
		</div>
	}
}

script editContact(name, phone string) {
	document.getElementById('name').value = name;
	document.getElementById('phone').value = phone;
	document.querySelector('form button[type="submit"]').textContent = 'Update Contact';
	document.querySelector('form').setAttribute('hx-put', '/contacts/' + encodeURIComponent(name));
}
